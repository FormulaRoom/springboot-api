buildscript {
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        jcenter()
    }
    dependencies {
        classpath('com.github.jengelman.gradle.plugins:shadow:1.2.4')
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.github.johnrengelman.shadow'

group = 'com.formularoom'
archivesBaseName = 'api'
version = '1.0.0'

ext {
    lombokVer = '1.16.8'
}

jar {
    baseName = archivesBaseName
}

shadowJar {
    baseName = archivesBaseName
    classifier = null
    version = version
}

// JVM 版本号要求
sourceCompatibility = 1.8
targetCompatibility = 1.8

// java编译的时候缺省状态下会因为中文字符而失败
[compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'

//定义版本号
ext {
    libPath =  "file:" + new File(rootProject.rootDir, '../Libs').getAbsolutePath().toString()
}

repositories {
    mavenLocal()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
    maven { url "http://nexus.mvnsearch.org/content/repositories/releases/" }
    maven { url "http://nexus.mvnsearch.org/content/repositories/snapshots/" }
    mavenCentral()
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url 'http://maven.springframework.org/release' }
    maven { url 'http://maven.springframework.org/milestone' }
}

dependencies {
    compile(
        "org.projectlombok:lombok:$lombokVer"
    )

    testCompile(
    )
}

jar {
    manifest {
        attributes("Implementation-Title": "Gradle")
    }
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

uploadShadow {
    repositories.mavenDeployer {
        repository(url: libPath)
    }
}
